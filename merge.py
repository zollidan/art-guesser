import json
import os
from pathlib import Path
from typing import List, Dict, Any

def merge_json_files(input_folder: str = "images", output_file: str = "merged_gallery.json") -> None:
    """
    –û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ JSON —Ñ–∞–π–ª—ã –∏–∑ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∞–ø–∫–∏ –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª
    
    Args:
        input_folder: –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å JSON —Ñ–∞–π–ª–∞–º–∏
        output_file: –ò–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    """
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏
    folder_path = Path(input_folder)
    if not folder_path.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ {input_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    # –ò—â–µ–º –≤—Å–µ JSON —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
    json_files = list(folder_path.glob("*.json"))
    
    if not json_files:
        print(f"‚ùå –í –ø–∞–ø–∫–µ {input_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ JSON —Ñ–∞–π–ª–æ–≤!")
        return
    
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ {len(json_files)} JSON —Ñ–∞–π–ª–æ–≤:")
    for file in json_files:
        print(f"  - {file.name}")
    
    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    merged_data = {
        "info": {
            "total_files": len(json_files),
            "source_files": [file.name for file in json_files],
            "total_items": 0
        },
        "galleries": {}
    }
    
    total_items = 0
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π JSON —Ñ–∞–π–ª
    for json_file in sorted(json_files):
        try:
            print(f"üìñ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é {json_file.name}...")
            
            with open(json_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è –≥–∞–ª–µ—Ä–µ–∏ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ (–±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
            gallery_name = json_file.stem
            
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            if "response" in data and "items" in data["response"]:
                items = data["response"]["items"]
                item_count = len(items)
                total_items += item_count
                
                merged_data["galleries"][gallery_name] = {
                    "count": item_count,
                    "items": items
                }
                
                print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {item_count} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ {gallery_name}")
            else:
                print(f"  ‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –≤ {json_file.name}")
                
        except json.JSONDecodeError as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON –≤ {json_file.name}: {e}")
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {json_file.name}: {e}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    merged_data["info"]["total_items"] = total_items
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    try:
        with open(output_file, 'w', encoding='utf-8') as f:
            json.dump(merged_data, f, ensure_ascii=False, indent=2)
        
        print(f"\nüéâ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω —Ñ–∞–π–ª {output_file}")
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {merged_data['info']['total_files']}")
        print(f"  - –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {merged_data['info']['total_items']}")
        print(f"  - –ì–∞–ª–µ—Ä–µ–π: {len(merged_data['galleries'])}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–∞–∂–¥–æ–π –≥–∞–ª–µ—Ä–µ–µ
        print(f"\nüìã –ì–∞–ª–µ—Ä–µ–∏:")
        for gallery_name, gallery_data in merged_data["galleries"].items():
            print(f"  - {gallery_name}: {gallery_data['count']} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {output_file}: {e}")

def create_simple_merged_file(input_folder: str = "images", output_file: str = "simple_merged.json") -> None:
    """
    –°–æ–∑–¥–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–π –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª - –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–¥–Ω–æ–º –º–∞—Å—Å–∏–≤–µ
    
    Args:
        input_folder: –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å JSON —Ñ–∞–π–ª–∞–º–∏
        output_file: –ò–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    """
    
    folder_path = Path(input_folder)
    if not folder_path.exists():
        print(f"‚ùå –ü–∞–ø–∫–∞ {input_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    json_files = list(folder_path.glob("*.json"))
    
    if not json_files:
        print(f"‚ùå –í –ø–∞–ø–∫–µ {input_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ JSON —Ñ–∞–π–ª–æ–≤!")
        return
    
    all_items = []
    
    for json_file in sorted(json_files):
        try:
            with open(json_file, 'r', encoding='utf-8') as f:
                data = json.load(f)
            
            if "response" in data and "items" in data["response"]:
                items = data["response"]["items"]
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
                for item in items:
                    item["source_gallery"] = json_file.stem
                
                all_items.extend(items)
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(items)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ {json_file.name}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ {json_file.name}: {e}")
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
    simple_merged = {
        "response": {
            "count": len(all_items),
            "items": all_items
        }
    }
    
    try:
        with open(output_file, 'w', encoding='utf-8') as f:
            json.dump(simple_merged, f, ensure_ascii=False, indent=2)
        
        print(f"\nüéâ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Å—Ç–æ–π –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª {output_file}")
        print(f"üìä –í—Å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(all_items)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üé® –°–∫—Ä–∏–ø—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è JSON –≥–∞–ª–µ—Ä–µ–π")
    print("=" * 40)
    
    # –°–æ–∑–¥–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    print("\n1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞...")
    merge_json_files("images", "merged_gallery.json")
    
    print("\n" + "=" * 40)
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    print("\n2Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞...")
    create_simple_merged_file("images", "simple_merged.json")
    
    print("\n" + "=" * 40)
    print("‚ú® –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω—ã —Ñ–∞–π–ª—ã:")
    print("  - merged_gallery.json (—Å —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ–º –ø–æ –≥–∞–ª–µ—Ä–µ—è–º)")
    print("  - simple_merged.json (–≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –æ–¥–Ω–æ–º —Å–ø–∏—Å–∫–µ)")

if __name__ == "__main__":
    main()