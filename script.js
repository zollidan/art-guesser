let currentPhotoIndex = 0;
let allPhotos = [];
let isRandomMode = false;
let viewedPhotos = new Set();
let loadedGalleries = [];

// –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
const GALLERY_FILES = [
  "vk_json/300948505.json",
  "vk_json/300948519.json",
  "vk_json/300948642.json",
  "vk_json/300954508.json",
  "vk_json/300981842.json",
  "vk_json/301279335.json",
  "vk_json/302320260.json",
  "vk_json/302320264.json",
  "vk_json/302320281.json",
  "vk_json/302320284.json",
  "vk_json/302320286.json",
  "vk_json/302320294.json",
  "vk_json/302320311.json",
  "vk_json/302320347.json",
  "vk_json/302489777.json",
  "vk_json/302553761.json",
  "vk_json/302555857.json",
  "vk_json/302564376.json",
];

async function loadJSON(url) {
  try {
    const response = await fetch(url);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data = await response.json();
    console.log(`Loaded from ${url}:`, data);
    return data;
  } catch (error) {
    console.error(`Error loading ${url}:`, error);
    return null;
  }
}

async function loadAllGalleries() {
  console.log(`üîÑ –ó–∞–≥—Ä—É–∂–∞—é ${GALLERY_FILES.length} –≥–∞–ª–µ—Ä–µ–π...`);

  const loadingElement = document.getElementById("loading");
  loadingElement.textContent = "–ó–∞–≥—Ä—É–∑–∫–∞ –≥–∞–ª–µ—Ä–µ–π...";

  let totalPhotos = 0;
  let successfulLoads = 0;

  for (let i = 0; i < GALLERY_FILES.length; i++) {
    const file = GALLERY_FILES[i];
    const galleryName = file.split("/").pop().replace(".json", "");

    loadingElement.textContent = `–ó–∞–≥—Ä—É–∑–∫–∞ ${galleryName} (${i + 1}/${
      GALLERY_FILES.length
    })...`;

    try {
      const data = await loadJSON(file);

      if (
        data &&
        data.response &&
        data.response.items &&
        data.response.items.length > 0
      ) {
        const items = data.response.items;

        // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
        items.forEach((item) => {
          item.source_gallery = galleryName;
          item.source_file = file;
        });

        allPhotos.push(...items);
        totalPhotos += items.length;
        successfulLoads++;

        loadedGalleries.push({
          name: galleryName,
          file: file,
          count: items.length,
          items: items,
        });

        console.log(`‚úÖ ${galleryName}: ${items.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π`);
      } else {
        console.warn(
          `‚ö†Ô∏è ${galleryName}: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–ª–∏ –ø—É—Å—Ç–æ–π —Ñ–∞–π–ª`
        );
      }
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${galleryName}:`, error);
    }
  }

  loadingElement.style.display = "none";

  if (allPhotos.length > 0) {
    console.log(
      `üéâ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${totalPhotos} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ ${successfulLoads} –≥–∞–ª–µ—Ä–µ–π`
    );

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    showGalleryStats();

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
    displayPhoto(0);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    document.getElementById("image-container").style.display = "inline-block";
    document.getElementById("photo-info").style.display = "block";
    document.getElementById("mode-indicator").style.display = "block";
    document.getElementById("controls").style.display = "block";
    document.getElementById("gallery-selector").style.display = "block";

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    setupNavigation();
    setupGallerySelector();
  } else {
    loadingElement.style.display = "block";
    loadingElement.textContent = "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏";
  }
}

function showGalleryStats() {
  console.log("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–∞–ª–µ—Ä–µ–π:");
  loadedGalleries.forEach((gallery) => {
    console.log(`  - ${gallery.name}: ${gallery.count} —Ñ–æ—Ç–æ`);
  });
}

function setupGallerySelector() {
  const selector = document.getElementById("gallery-select");

  // –û—á–∏—â–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä
  selector.innerHTML = '<option value="all">–í—Å–µ –≥–∞–ª–µ—Ä–µ–∏</option>';

  // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –≥–∞–ª–µ—Ä–µ–∏
  loadedGalleries.forEach((gallery) => {
    const option = document.createElement("option");
    option.value = gallery.name;
    option.textContent = `${gallery.name} (${gallery.count})`;
    selector.appendChild(option);
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞
  selector.addEventListener("change", (event) => {
    filterByGallery(event.target.value);
  });
}

function filterByGallery(galleryName) {
  if (galleryName === "all") {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    allPhotos = [];
    loadedGalleries.forEach((gallery) => {
      allPhotos.push(...gallery.items);
    });
  } else {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥–∞–ª–µ—Ä–µ—é
    const selectedGallery = loadedGalleries.find((g) => g.name === galleryName);
    if (selectedGallery) {
      allPhotos = [...selectedGallery.items];
    }
  }

  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  currentPhotoIndex = 0;
  viewedPhotos.clear();

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
  if (allPhotos.length > 0) {
    displayPhoto(0);
  }

  console.log(
    `–û—Ç–æ–±—Ä–∞–∂–∞—é ${allPhotos.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ ${
      galleryName === "all" ? "–≤—Å–µ—Ö –≥–∞–ª–µ—Ä–µ–π" : galleryName
    }`
  );
}

function displayPhoto(index) {
  if (index >= 0 && index < allPhotos.length) {
    const photo = allPhotos[index];

    const largestSize = photo.sizes[photo.sizes.length - 1];

    const mainImage = document.getElementById("main-image");
    mainImage.src = largestSize.url;
    mainImage.alt = `–§–æ—Ç–æ ${index + 1} –∏–∑ ${allPhotos.length}`;

    const photoInfo = document.getElementById("photo-info");
    const modeText = isRandomMode ? " (—Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ–∂–∏–º)" : "";
    const galleryText = photo.source_gallery
      ? ` | ${photo.source_gallery}`
      : "";
    photoInfo.textContent = `–§–æ—Ç–æ ${index + 1} –∏–∑ ${allPhotos.length} (${
      largestSize.width
    }√ó${largestSize.height})${modeText}${galleryText}`;

    viewedPhotos.add(index);

    // –û–±–Ω–æ–≤–ª—è–µ–º tooltip
    updateTooltip(photo);

    currentPhotoIndex = index;
    updateButtons();
  }
}

function updateTooltip(photo) {
  const tooltip = document.getElementById("tooltip");

  console.log("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ tooltip:", photo.text); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏

  if (photo.text && photo.text.trim() !== "") {
    tooltip.textContent = photo.text;

    if (photo.text.length > 50) {
      tooltip.classList.add("long-text");
    } else {
      tooltip.classList.remove("long-text");
    }
  } else {
    tooltip.textContent = "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
    tooltip.classList.remove("long-text");
  }
}

function getRandomPhotoIndex() {
  if (allPhotos.length <= 1) return 0;

  if (viewedPhotos.size >= allPhotos.length) {
    viewedPhotos.clear();
    viewedPhotos.add(currentPhotoIndex);
  }

  let randomIndex;
  let attempts = 0;
  const maxAttempts = 50;

  do {
    randomIndex = Math.floor(Math.random() * allPhotos.length);
    attempts++;
  } while (viewedPhotos.has(randomIndex) && attempts < maxAttempts);

  if (attempts >= maxAttempts) {
    randomIndex = Math.floor(Math.random() * allPhotos.length);
  }

  return randomIndex;
}

function goToNextPhoto() {
  if (isRandomMode) {
    const randomIndex = getRandomPhotoIndex();
    displayPhoto(randomIndex);
  } else {
    if (currentPhotoIndex < allPhotos.length - 1) {
      displayPhoto(currentPhotoIndex + 1);
    } else {
      displayPhoto(0);
    }
  }
}

function goToPrevPhoto() {
  if (isRandomMode) {
    const randomIndex = getRandomPhotoIndex();
    displayPhoto(randomIndex);
  } else {
    if (currentPhotoIndex > 0) {
      displayPhoto(currentPhotoIndex - 1);
    } else {
      displayPhoto(allPhotos.length - 1);
    }
  }
}

function toggleMode() {
  isRandomMode = !isRandomMode;
  viewedPhotos.clear();
  viewedPhotos.add(currentPhotoIndex);

  const modeIndicator = document.getElementById("mode-indicator");
  const toggleBtn = document.getElementById("toggle-mode-btn");

  if (isRandomMode) {
    modeIndicator.textContent = "–†–µ–∂–∏–º: –°–ª—É—á–∞–π–Ω—ã–π";
    modeIndicator.className = "mode-indicator mode-random";
    toggleBtn.textContent = "–†–µ–∂–∏–º: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π";
  } else {
    modeIndicator.textContent = "–†–µ–∂–∏–º: –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π";
    modeIndicator.className = "mode-indicator mode-sequential";
    toggleBtn.textContent = "–†–µ–∂–∏–º: –°–ª—É—á–∞–π–Ω—ã–π";
  }

  updateButtons();
  displayPhoto(currentPhotoIndex);
}

function setupNavigation() {
  const prevBtn = document.getElementById("prev-btn");
  const nextBtn = document.getElementById("next-btn");
  const randomBtn = document.getElementById("random-btn");
  const toggleModeBtn = document.getElementById("toggle-mode-btn");

  prevBtn.addEventListener("click", goToPrevPhoto);
  nextBtn.addEventListener("click", goToNextPhoto);

  randomBtn.addEventListener("click", () => {
    const randomIndex = getRandomPhotoIndex();
    displayPhoto(randomIndex);
  });

  toggleModeBtn.addEventListener("click", toggleMode);

  document.addEventListener("keydown", (event) => {
    switch (event.key) {
      case "ArrowLeft":
      case "a":
      case "A":
        goToPrevPhoto();
        break;
      case "ArrowRight":
      case "d":
      case "D":
        goToNextPhoto();
        break;
      case " ":
        event.preventDefault();
        const randomIndex = getRandomPhotoIndex();
        displayPhoto(randomIndex);
        break;
      case "r":
      case "R":
        const randomIndex2 = getRandomPhotoIndex();
        displayPhoto(randomIndex2);
        break;
      case "m":
      case "M":
        toggleMode();
        break;
      case "1":
      case "2":
      case "3":
      case "4":
      case "5":
      case "6":
      case "7":
      case "8":
      case "9":
        // –ë—ã—Å—Ç—Ä–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≥–∞–ª–µ—Ä–µ—è–º–∏ –ø–æ —Ü–∏—Ñ—Ä–∞–º
        const galleryIndex = parseInt(event.key) - 1;
        if (galleryIndex < loadedGalleries.length) {
          const selector = document.getElementById("gallery-select");
          selector.value = loadedGalleries[galleryIndex].name;
          filterByGallery(loadedGalleries[galleryIndex].name);
        } else if (event.key === "1") {
          // –¶–∏—Ñ—Ä–∞ 1 - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≥–∞–ª–µ—Ä–µ–∏
          const selector = document.getElementById("gallery-select");
          selector.value = "all";
          filterByGallery("all");
        }
        break;
    }
  });

  const mainImage = document.getElementById("main-image");
  mainImage.addEventListener("click", toggleFullscreen);
}

function updateButtons() {
  const prevBtn = document.getElementById("prev-btn");
  const nextBtn = document.getElementById("next-btn");

  if (isRandomMode) {
    prevBtn.disabled = false;
    nextBtn.disabled = false;
    prevBtn.textContent = "üé≤ –°–ª—É—á–∞–π–Ω–∞—è";
    nextBtn.textContent = "üé≤ –°–ª—É—á–∞–π–Ω–∞—è";
  } else {
    prevBtn.disabled = false;
    nextBtn.disabled = false;
    prevBtn.textContent = "‚Üê –ü—Ä–µ–¥—ã–¥—É—â–∞—è";
    nextBtn.textContent = "–°–ª–µ–¥—É—é—â–∞—è ‚Üí";
  }
}

function toggleFullscreen() {
  const mainImage = document.getElementById("main-image");

  if (!document.fullscreenElement) {
    mainImage.requestFullscreen().catch((err) => {
      console.log(`–û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞: ${err.message}`);
    });
  } else {
    document.exitFullscreen();
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥–∞–ª–µ—Ä–µ–π
function addGallery(filePath) {
  if (!GALLERY_FILES.includes(filePath)) {
    GALLERY_FILES.push(filePath);
    console.log(`–î–æ–±–∞–≤–ª–µ–Ω–∞ –≥–∞–ª–µ—Ä–µ—è: ${filePath}`);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–¥–Ω–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –≥–∞–ª–µ—Ä–µ–∏
async function loadAdditionalGallery(filePath) {
  const galleryName = filePath.split("/").pop().replace(".json", "");

  try {
    const data = await loadJSON(filePath);

    if (
      data &&
      data.response &&
      data.response.items &&
      data.response.items.length > 0
    ) {
      const items = data.response.items;

      // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
      items.forEach((item) => {
        item.source_gallery = galleryName;
        item.source_file = filePath;
      });

      // –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ (–µ—Å–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –≥–∞–ª–µ—Ä–µ–∏)
      const currentSelection = document.getElementById("gallery-select").value;
      if (currentSelection === "all") {
        allPhotos.push(...items);
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≥–∞–ª–µ—Ä–µ–π
      loadedGalleries.push({
        name: galleryName,
        file: filePath,
        count: items.length,
        items: items,
      });

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä
      setupGallerySelector();

      console.log(
        `‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –≥–∞–ª–µ—Ä–µ—è ${galleryName}: ${items.length} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π`
      );

      return true;
    }
  } catch (error) {
    console.error(
      `‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –≥–∞–ª–µ—Ä–µ–∏ ${galleryName}:`,
      error
    );
  }

  return false;
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –≥–∞–ª–µ—Ä–µ–π
loadAllGalleries();
